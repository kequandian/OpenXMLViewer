[
  {
    "Id": "215436",
    "ThreadId": "63352",
    "Html": "<p>Great utility! I've been trying the console application and it works really well. I've been considering using this utility as an alternative to SharePoint's document conversion service since it doesn't support embedded images (reason: it doesn't know where it should put them). I'd like to use OpenXMLViewer.exe to convert uploaded .docx files, but I have two problems:</p>\r\n<p>1) There&nbsp;are no physical paths for the uploaded documents. I can get the web URI or the actual binary contents of a file, but not the physical machine location.</p>\r\n<p>2) The html file is written to the destination folder and embedded images get outputted to a subfolder (word\\media), but I need to get the file paths and names of the html file and its associated images so that I can upload them to a document library.</p>\r\n<p>I was looking at the code and it isn't immediately obvious how I can do this. Hoping you can point me in the right direction to enhance the console app to do this.</p>\r\n<p>Thanks.</p>",
    "PostedDate": "2009-07-23T11:49:13.657-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "215522",
    "ThreadId": "63352",
    "Html": "<p>After looking at the latest source code, I noticed that the C# file program.cs file does perform a conversion, but when I compiled and ran it, it doesn't extract embedded images. Is this intentional? Maybe I'm missing something...</p>",
    "PostedDate": "2009-07-23T16:37:41.37-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "215586",
    "ThreadId": "63352",
    "Html": "<p>Hi,</p>\r\n<p>Good questions there.</p>\r\n<p>1. I am afraid the application needs a fully qualified path to work with. We will look at this in the next release. For now, there can be 2 approaches possible.</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a. Wrap the OpenXMLViewer.exe with another application layer that will be able to determine the actual physical path and call the exe</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b. The C++ source code is available in the source branch. The code can be modified, built etc to get the relative path.</p>\r\n<p>2. The file generated is &lt;document name&gt;.html / &lt;document name&gt;.xhtml. This can be used to get the respective file name. However for the images, a change in code may be needed. The current application uses the file names as stored in the docx. Hence it is possible that the image file may be overwritten in case multiple documents use the same file name and the files are extracted to the same output folder.</p>\r\n<p>The C# code branch is not supported and is legacy code. Hence it may not function as expected.</p>\r\n<p>Best regards,</p>\r\n<p>Anand</p>",
    "PostedDate": "2009-07-23T21:19:22.097-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]